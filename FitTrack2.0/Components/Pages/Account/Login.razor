@page "/Account/Login"

@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager

<PageTitle>Log in</PageTitle>

<h1>Login</h1>
<div class="row">
    <div class="col-md-4">
        <StatusMessage Message="@errorMessage"/>
        <EditForm Model="Input" method="post" OnValidSubmit="LogInUser" FormName="login">
            <DataAnnotationsValidator/>
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating mb-3">
                <InputText id="email" @bind-Value="Input.Email" class="form-control" placeholder=""/>
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="() => Input.Email" class="text-danger"/>
            </div>
            <div class="form-floating mb-3">
                <InputText id="password" type="password" @bind-Value="Input.Password" class="form-control" placeholder=""/>
                <label for="password" class="form-label">Password</label>
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </div>
            <div class="checkbox mb-3">
                <label class="form-label">
                    <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input" />
                    Remember me
                </label>
            </div>
            <div>
                <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
            </div>
            <div>
                <p>
                    <a href="Account/Register">Create a new account</a>
                </p>
            </div>
        </EditForm>
    </div>

</div>

@code {
    private string? errorMessage;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    public async Task LogInUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if(result.Succeeded)
        {
            NavigationManager.NavigateTo("/home");
        }
        else
        {
            NavigationManager.NavigateTo("/weather");
        }

    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
